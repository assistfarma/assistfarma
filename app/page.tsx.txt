'use client';

import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";

export default function AssistFarma() {
  const [input, setInput] = useState("");
  const [resposta, setResposta] = useState("");
  const [digitando, setDigitando] = useState(false);

  const respostasSimuladas: Record<string, string> = {
    diurÃ©tico: `**SugestÃ£o de Atendimento**
- Suplemento de magnÃ©sio e potÃ¡ssio (ex.: cloreto de magnÃ©sio PA, citrato de magnÃ©sio)
- Complexo B para suporte neuromuscular
**Cuidados:** Avaliar funÃ§Ã£o renal antes de suplementar potÃ¡ssio`,
    gestante: `**SugestÃ£o de Atendimento**
- AntiÃ¡cidos Ã  base de carbonato de cÃ¡lcio
- Fracionar refeiÃ§Ãµes e evitar alimentos gordurosos
**Cuidados:** Evitar medicamentos com sÃ³dio em excesso`,
    azia: `**SugestÃ£o de Atendimento**
- AntiÃ¡cidos Ã  base de carbonato de cÃ¡lcio
- Fracionar refeiÃ§Ãµes e evitar alimentos gordurosos
**Cuidados:** Evitar medicamentos com sÃ³dio em excesso`,
    resfriado: `**SugestÃ£o de Atendimento**
- AnalgÃ©sicos/antitÃ©rmicos (paracetamol, dipirona)
- Pastilhas para garganta
- Lavagem nasal com soro fisiolÃ³gico
**Cuidados:** Evitar uso desnecessÃ¡rio de anti-inflamatÃ³rios`,
    vertigem: `**SugestÃ£o de Atendimento**
- ReidrataÃ§Ã£o oral com sais minerais
- CafeÃ­na leve se nÃ£o houver contraindicaÃ§Ã£o
**Cuidados:** Procurar mÃ©dico se sintomas forem recorrentes`,
    pressÃ£o: `**SugestÃ£o de Atendimento**
- ReidrataÃ§Ã£o oral com sais minerais
- CafeÃ­na leve se nÃ£o houver contraindicaÃ§Ã£o
**Cuidados:** Procurar mÃ©dico se sintomas forem recorrentes`,
  };

  const handleEnviar = () => {
    if (!input.trim()) return;
    setResposta("");
    setDigitando(true);

    setTimeout(() => {
      const chave = Object.keys(respostasSimuladas).find((key) =>
        input.toLowerCase().includes(key)
      );
      const respostaEscolhida =
        chave ? respostasSimuladas[chave] : "NÃ£o encontrei uma sugestÃ£o especÃ­fica para esta queixa, mas consulte um farmacÃªutico para orientaÃ§Ãµes.";
      
      setDigitando(false);
      mostrarTextoGradualmente(respostaEscolhida);
      setInput("");
    }, 1500);
  };

  const mostrarTextoGradualmente = (texto: string) => {
    let index = 0;
    const intervalo = setInterval(() => {
      setResposta((prev) => prev + texto[index]);
      index++;
      if (index >= texto.length) clearInterval(intervalo);
    }, 15);
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") {
      e.preventDefault();
      handleEnviar();
    }
  };

  return (
    <div style={{ padding: "20px", maxWidth: "700px", margin: "auto" }}>
      <h1 style={{ color: "#28A745" }}>AssistFarma ðŸ’Š</h1>
      <p>Digite a queixa do cliente para receber sugestÃµes personalizadas de atendimento.</p>
      <Card>
        <CardContent>
          <Input
            placeholder="Ex: Cliente com uso de diurÃ©tico e cÃ¢imbras"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={handleKeyDown}
          />
          <Button onClick={handleEnviar} style={{ marginTop: "10px" }}>Analisar</Button>
          {digitando && <p>Digitando...</p>}
          {resposta && (
            <div
              style={{
                background: "#f0f0f0",
                padding: "10px",
                marginTop: "15px",
                borderRadius: "5px",
                whiteSpace: "pre-wrap"
              }}
            >
              {resposta}
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
